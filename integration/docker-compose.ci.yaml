# Copyright (c) 2004-present Facebook All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

version: "3.7"

services:
  nginx:
    image: nginx:alpine
    ports:
      - ${PORT:-443}:443
    networks:
      default:
        aliases:
          - fb-test.thesymphony.cloud
    volumes:
      - ./nginx/ci.nginx:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs/cert.pem:/etc/nginx/ssl/tls.crt:ro
      - ./nginx/certs/key.pem:/etc/nginx/ssl/tls.key:ro
    healthcheck:
      test: curl -Ifk https://localhost/healthz
    restart: on-failure

  front:
    image: ${DOCKER_REGISTRY}/front:${TAG}
    env_file:
      - conf/front.env
    depends_on:
      - mysql
    healthcheck:
      test: "curl -If -H 'Host: fb-test.localhost' localhost/healthz"
      interval: 10s
      timeout: 3s
    restart: on-failure

  admin:
    image: ${DOCKER_REGISTRY}/admin:${TAG}
    env_file:
      - conf/db.env
      - conf/log.env
    depends_on:
      - mysql
    healthcheck: &healthcheck
      test: curl -If localhost/healthz/liveness
    restart: on-failure

  graph:
    image: ${DOCKER_REGISTRY}/graph:${TAG}
    env_file:
      - conf/graph.env
      - conf/db.env
      - conf/log.env
    environment:
      - WS_AUTH_URL=http://front/user/me
    depends_on:
      - migrate
      - mysql
      - nats
      - async
    healthcheck: *healthcheck
    restart: on-failure

  migrate:
    image: ${DOCKER_REGISTRY}/graph:${TAG}
    entrypoint: /bin/migrate
    command:
      - "--db-dsn=root:root@tcp(mysql:3306)/?charset=utf8&parseTime=true"
      - "--wait-for-db"
      - "--tenant=fb-test"
    depends_on:
      - mysql
    restart: on-failure

  async:
    image: ${DOCKER_REGISTRY}/async:${TAG}
    env_file:
      - conf/async.env
      - conf/db.env
      - conf/log.env
    environment:
      - FEATURES_URL=http://front:1030/features
    depends_on:
      - mysql
      - nats
      - front
    healthcheck: *healthcheck
    restart: on-failure

  store:
    image: ${DOCKER_REGISTRY}/store:${TAG}
    env_file:
      - conf/store.env
      - conf/log.env
    healthcheck: *healthcheck
    restart: on-failure

  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: auth
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    security_opt:
      - seccomp:unconfined
    healthcheck:
      test: mysqladmin ping -proot
    restart: always

  minio:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      MINIO_SECRET_KEY: /wJalrXUtnFEMIK7MDENG/bPxRfiCYEXAMPLEKEY
    entrypoint: sh
    command: -c 'mkdir -p /data/store.blobs && /usr/bin/minio server /data'

  nats:
    image: nats
    restart: on-failure

  tests:
    build:
      context: ..
      dockerfile: integration/tests/Dockerfile
    volumes:
      - ..:/src/symphony:delegated

  pytests:
    build:
      context: ..
      dockerfile: cli/tests/Dockerfile
    volumes:
      - ..:/src/symphony:delegated
    environment:
      PLATFORM_SERVER_HEALTH_CHECK_URL: http://front/healthz

  testimio:
    image: testim/docker-cli
    command: |
      testim --token ${TESTIMIO_TOKEN}
      --grid ${TESTIMIO_GRID}
      --project ${TESTIMIO_PROJECT}
      --retries 3
      --tunnel
      --tunnel-port nginx:443
      --tunnel-host-header "fb-test.localhost"
      --result-label "pr-blocking"
      --parallel 15
      --suite Sanity
