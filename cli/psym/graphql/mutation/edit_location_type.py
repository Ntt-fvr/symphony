#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass, field
from datetime import datetime
from gql_client.runtime.datetime_utils import DATETIME_FIELD_METADATA
from gql_client.runtime.variables import encode_variables
from gql import gql, Client
from gql.transport.exceptions import TransportQueryError
from functools import partial
from numbers import Number
from typing import Any, AsyncGenerator, Callable, Dict, List, Generator, Optional
from time import perf_counter
from dataclasses_json import DataClassJsonMixin

from ..fragment.location_type import LocationTypeFragment, QUERY as LocationTypeFragmentQuery
from ..input.edit_location_type_input import EditLocationTypeInput


# fmt: off
QUERY: List[str] = LocationTypeFragmentQuery + ["""
mutation EditLocationTypeMutation($input: EditLocationTypeInput!) {
  editLocationType(input: $input) {
    ...LocationTypeFragment
  }
}
"""
]


class EditLocationTypeMutation:
    @dataclass(frozen=True)
    class EditLocationTypeMutationData(DataClassJsonMixin):
        @dataclass(frozen=True)
        class LocationType(LocationTypeFragment):
            pass

        editLocationType: LocationType

    # fmt: off
    @classmethod
    def execute(cls, client: Client, input: EditLocationTypeInput) -> EditLocationTypeMutationData.LocationType:
        variables: Dict[str, Any] = {"input": input}
        new_variables = encode_variables(variables)
        response_text = client.execute(
            gql("".join(set(QUERY))), variable_values=new_variables
        )
        res = cls.EditLocationTypeMutationData.from_dict(response_text)
        return res.editLocationType

    # fmt: off
    @classmethod
    async def execute_async(cls, client: Client, input: EditLocationTypeInput) -> EditLocationTypeMutationData.LocationType:
        variables: Dict[str, Any] = {"input": input}
        new_variables = encode_variables(variables)
        response_text = await client.execute_async(
            gql("".join(set(QUERY))), variable_values=new_variables
        )
        res = cls.EditLocationTypeMutationData.from_dict(response_text)
        return res.editLocationType
