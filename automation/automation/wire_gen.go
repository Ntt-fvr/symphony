// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/facebookincubator/symphony/automation/config"
	"github.com/facebookincubator/symphony/pkg/log"
)

// Injectors from wire.go:

func NewApplication(appConfig *config.AppConfig) (*application, func(), error) {
	logConfig := appConfig.LogConfig
	logger, cleanup, err := log.ProvideLogger(logConfig)
	if err != nil {
		return nil, nil, err
	}
	zapLogger := log.ProvideZapLogger(logger)
	apiConfig := config.ApiConfiguration(appConfig)
	cadenceConfig := config.CadenceConfiguration(appConfig)
	graphQLConfig := config.GraphQLConfiguration(appConfig)
	mainApplication := &application{
		logger:        zapLogger,
		apiConfig:     apiConfig,
		cadenceConfig: cadenceConfig,
		graphQLConfig: graphQLConfig,
	}
	return mainApplication, func() {
		cleanup()
	}, nil
}
