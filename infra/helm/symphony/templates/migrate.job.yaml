{{- /*
Copyright (c) 2004-present Facebook All rights reserved.
Use of this source code is governed by a BSD-style
license that can be found in the LICENSE file.
*/ -}}
{{- range $name, $spec := .Values.migrate.spec.migrations }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "symphony.migrate.fullname" $ }}-{{ $name }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels: {{- include "symphony.migrate.metaLabels" $ | nindent 4 }}
spec:
  template:
    metadata:
      name: {{ template "symphony.migrate.fullname" $ }}-{{ $name }}
      labels: {{- include "symphony.migrate.metaLabels" $ | nindent 8 }}
    spec:
      {{- with $.Values.migrate.securityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- include "symphony.imagePullSecrets" $ | indent 6 }}
      containers:
        - name: migrate
          image: {{ $.Values.migrate.image.repository }}:{{ $.Values.migrate.image.tag }}
          imagePullPolicy: {{ $.Values.migrate.image.pullPolicy }}
          args:
            - {{ $name }}
            {{- if eq $name "ent" }}
            - --db-driver=mysql
            - --db-dsn=$(MYSQL_DSN)
            {{- else if eq $name "cadence" }}
            - --address={{ required ".Values.migrate.spec.migrations.cadence.address is required" $.Values.migrate.spec.migrations.cadence.address }}
            - --domain={{ $.Values.migrate.spec.migrations.cadence.domain }}
            {{- end }}
          env:
            {{- if eq $name "graph" }}
            - name: MYSQL_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ template "symphony.migrate.secretName" $ }}
                  key: MYSQL_DSN
            {{- end }}
            {{- include "symphony.loggingEnv" $.Values.migrate | nindent 12 }}
            {{- with $spec.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      restartPolicy: Never
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template  "symphony.migrate.secretName" . }}
  labels: {{- include "symphony.metaLabels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
type: Opaque
stringData: {{- include "symphony.graphDB.stringData" . | nindent 2 }}
