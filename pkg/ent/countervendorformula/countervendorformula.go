// Copyright (c) 2004-present Facebook All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by entc, DO NOT EDIT.

package countervendorformula

import (
	"time"

	"github.com/facebook/ent"
)

const (
	// Label holds the string label denoting the countervendorformula type in the database.
	Label = "counter_vendor_formula"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldMandatory holds the string denoting the mandatory field in the database.
	FieldMandatory = "mandatory"

	// EdgeFormula holds the string denoting the formula edge name in mutations.
	EdgeFormula = "formula"
	// EdgeVendor holds the string denoting the vendor edge name in mutations.
	EdgeVendor = "vendor"
	// EdgeCounter holds the string denoting the counter edge name in mutations.
	EdgeCounter = "counter"

	// Table holds the table name of the countervendorformula in the database.
	Table = "counter_vendor_formulas"
	// FormulaTable is the table the holds the formula relation/edge.
	FormulaTable = "counter_vendor_formulas"
	// FormulaInverseTable is the table name for the Formula entity.
	// It exists in this package in order to avoid circular dependency with the "formula" package.
	FormulaInverseTable = "formulas"
	// FormulaColumn is the table column denoting the formula relation/edge.
	FormulaColumn = "formula_formula_fk"
	// VendorTable is the table the holds the vendor relation/edge.
	VendorTable = "counter_vendor_formulas"
	// VendorInverseTable is the table name for the Vendor entity.
	// It exists in this package in order to avoid circular dependency with the "vendor" package.
	VendorInverseTable = "vendors"
	// VendorColumn is the table column denoting the vendor relation/edge.
	VendorColumn = "vendor_vendor_fk"
	// CounterTable is the table the holds the counter relation/edge.
	CounterTable = "counter_vendor_formulas"
	// CounterInverseTable is the table name for the Counter entity.
	// It exists in this package in order to avoid circular dependency with the "counter" package.
	CounterInverseTable = "counters"
	// CounterColumn is the table column denoting the counter relation/edge.
	CounterColumn = "counter_counter_fk"
)

// Columns holds all SQL columns for countervendorformula fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldMandatory,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the CounterVendorFormula type.
var ForeignKeys = []string{
	"counter_counter_fk",
	"formula_formula_fk",
	"vendor_vendor_fk",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/facebookincubator/symphony/pkg/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreateTime holds the default value on creation for the create_time field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the update_time field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	UpdateDefaultUpdateTime func() time.Time
)
