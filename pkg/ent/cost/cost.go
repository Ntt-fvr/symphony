// Copyright (c) 2004-present Facebook All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by entc, DO NOT EDIT.

package cost

import (
	"time"

	"github.com/facebook/ent"
)

const (
	// Label holds the string label denoting the cost type in the database.
	Label = "cost"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldItem holds the string denoting the item field in the database.
	FieldItem = "item"
	// FieldUnit holds the string denoting the unit field in the database.
	FieldUnit = "unit"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// FieldTotal holds the string denoting the total field in the database.
	FieldTotal = "total"

	// EdgeUplitem holds the string denoting the uplitem edge name in mutations.
	EdgeUplitem = "uplitem"
	// EdgeWorkorder holds the string denoting the workorder edge name in mutations.
	EdgeWorkorder = "workorder"

	// Table holds the table name of the cost in the database.
	Table = "costs"
	// UplitemTable is the table the holds the uplitem relation/edge.
	UplitemTable = "costs"
	// UplitemInverseTable is the table name for the UplItem entity.
	// It exists in this package in order to avoid circular dependency with the "uplitem" package.
	UplitemInverseTable = "upl_items"
	// UplitemColumn is the table column denoting the uplitem relation/edge.
	UplitemColumn = "upl_item_uplitem"
	// WorkorderTable is the table the holds the workorder relation/edge.
	WorkorderTable = "costs"
	// WorkorderInverseTable is the table name for the WorkOrder entity.
	// It exists in this package in order to avoid circular dependency with the "workorder" package.
	WorkorderInverseTable = "work_orders"
	// WorkorderColumn is the table column denoting the workorder relation/edge.
	WorkorderColumn = "work_order_workorder_costs"
)

// Columns holds all SQL columns for cost fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldItem,
	FieldUnit,
	FieldPrice,
	FieldQuantity,
	FieldTotal,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Cost type.
var ForeignKeys = []string{
	"upl_item_uplitem",
	"work_order_workorder_costs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/facebookincubator/symphony/pkg/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreateTime holds the default value on creation for the create_time field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the update_time field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	UpdateDefaultUpdateTime func() time.Time
)
