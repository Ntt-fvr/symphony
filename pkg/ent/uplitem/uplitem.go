// Copyright (c) 2004-present Facebook All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by entc, DO NOT EDIT.

package uplitem

import (
	"time"

	"github.com/facebook/ent"
)

const (
	// Label holds the string label denoting the uplitem type in the database.
	Label = "upl_item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldExternalid holds the string denoting the externalid field in the database.
	FieldExternalid = "externalid"
	// FieldItem holds the string denoting the item field in the database.
	FieldItem = "item"
	// FieldUnit holds the string denoting the unit field in the database.
	FieldUnit = "unit"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"

	// EdgeUplItem holds the string denoting the uplitem edge name in mutations.
	EdgeUplItem = "UplItem"
	// EdgeUpl holds the string denoting the upl edge name in mutations.
	EdgeUpl = "upl"

	// Table holds the table name of the uplitem in the database.
	Table = "upl_items"
	// UplItemTable is the table the holds the UplItem relation/edge.
	UplItemTable = "costs"
	// UplItemInverseTable is the table name for the Cost entity.
	// It exists in this package in order to avoid circular dependency with the "cost" package.
	UplItemInverseTable = "costs"
	// UplItemColumn is the table column denoting the UplItem relation/edge.
	UplItemColumn = "upl_item_upl_item"
	// UplTable is the table the holds the upl relation/edge.
	UplTable = "upl_items"
	// UplInverseTable is the table name for the Upl entity.
	// It exists in this package in order to avoid circular dependency with the "upl" package.
	UplInverseTable = "upls"
	// UplColumn is the table column denoting the upl relation/edge.
	UplColumn = "upl_upl_items"
)

// Columns holds all SQL columns for uplitem fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldExternalid,
	FieldItem,
	FieldUnit,
	FieldPrice,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the UplItem type.
var ForeignKeys = []string{
	"upl_upl_items",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/facebookincubator/symphony/pkg/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreateTime holds the default value on creation for the create_time field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the update_time field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	UpdateDefaultUpdateTime func() time.Time
)
