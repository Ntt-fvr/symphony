// Copyright (c) 2004-present Facebook All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by entc, DO NOT EDIT.

package resourcerelationship

import (
	"time"

	"github.com/facebook/ent"
)

const (
	// Label holds the string label denoting the resourcerelationship type in the database.
	Label = "resource_relationship"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeResourcetypea holds the string denoting the resourcetypea edge name in mutations.
	EdgeResourcetypea = "resourcetypea"
	// EdgeResourcetypeb holds the string denoting the resourcetypeb edge name in mutations.
	EdgeResourcetypeb = "resourcetypeb"
	// EdgeResourcerelationshiptypefk holds the string denoting the resourcerelationshiptypefk edge name in mutations.
	EdgeResourcerelationshiptypefk = "resourcerelationshiptypefk"
	// EdgeLocationtypefk holds the string denoting the locationtypefk edge name in mutations.
	EdgeLocationtypefk = "locationtypefk"
	// EdgeResourceRelationshipMultiplicityFk holds the string denoting the resource_relationship_multiplicity_fk edge name in mutations.
	EdgeResourceRelationshipMultiplicityFk = "resource_relationship_multiplicity_fk"

	// Table holds the table name of the resourcerelationship in the database.
	Table = "resource_relationships"
	// ResourcetypeaTable is the table the holds the resourcetypea relation/edge.
	ResourcetypeaTable = "resource_relationships"
	// ResourcetypeaInverseTable is the table name for the ResourceType entity.
	// It exists in this package in order to avoid circular dependency with the "resourcetype" package.
	ResourcetypeaInverseTable = "resource_types"
	// ResourcetypeaColumn is the table column denoting the resourcetypea relation/edge.
	ResourcetypeaColumn = "resource_type_resource_relationship_fk_a"
	// ResourcetypebTable is the table the holds the resourcetypeb relation/edge.
	ResourcetypebTable = "resource_relationships"
	// ResourcetypebInverseTable is the table name for the ResourceType entity.
	// It exists in this package in order to avoid circular dependency with the "resourcetype" package.
	ResourcetypebInverseTable = "resource_types"
	// ResourcetypebColumn is the table column denoting the resourcetypeb relation/edge.
	ResourcetypebColumn = "resource_type_resource_relationship_fk_b"
	// ResourcerelationshiptypefkTable is the table the holds the resourcerelationshiptypefk relation/edge.
	ResourcerelationshiptypefkTable = "resource_relationships"
	// ResourcerelationshiptypefkInverseTable is the table name for the ResourceRelationshipType entity.
	// It exists in this package in order to avoid circular dependency with the "resourcerelationshiptype" package.
	ResourcerelationshiptypefkInverseTable = "resource_relationship_types"
	// ResourcerelationshiptypefkColumn is the table column denoting the resourcerelationshiptypefk relation/edge.
	ResourcerelationshiptypefkColumn = "resource_relationship_type_resource_relationship_fk"
	// LocationtypefkTable is the table the holds the locationtypefk relation/edge.
	LocationtypefkTable = "resource_relationships"
	// LocationtypefkInverseTable is the table name for the LocationType entity.
	// It exists in this package in order to avoid circular dependency with the "locationtype" package.
	LocationtypefkInverseTable = "location_types"
	// LocationtypefkColumn is the table column denoting the locationtypefk relation/edge.
	LocationtypefkColumn = "location_type_resource_relationship_fk"
	// ResourceRelationshipMultiplicityFkTable is the table the holds the resource_relationship_multiplicity_fk relation/edge.
	ResourceRelationshipMultiplicityFkTable = "resource_relationships"
	// ResourceRelationshipMultiplicityFkInverseTable is the table name for the ResourceRelationshipMultiplicity entity.
	// It exists in this package in order to avoid circular dependency with the "resourcerelationshipmultiplicity" package.
	ResourceRelationshipMultiplicityFkInverseTable = "resource_relationship_multiplicities"
	// ResourceRelationshipMultiplicityFkColumn is the table column denoting the resource_relationship_multiplicity_fk relation/edge.
	ResourceRelationshipMultiplicityFkColumn = "resource_relationship_multiplicity_resource_relationship_fk"
)

// Columns holds all SQL columns for resourcerelationship fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the ResourceRelationship type.
var ForeignKeys = []string{
	"location_type_resource_relationship_fk",
	"resource_relationship_multiplicity_resource_relationship_fk",
	"resource_relationship_type_resource_relationship_fk",
	"resource_type_resource_relationship_fk_a",
	"resource_type_resource_relationship_fk_b",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/facebookincubator/symphony/pkg/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreateTime holds the default value on creation for the create_time field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the update_time field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	UpdateDefaultUpdateTime func() time.Time
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
