// Copyright (c) 2004-present Facebook All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by entc, DO NOT EDIT.

package execution

import (
	"time"

	"github.com/facebook/ent"
)

const (
	// Label holds the string label denoting the execution type in the database.
	Label = "execution"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldManualConfirmation holds the string denoting the manualconfirmation field in the database.
	FieldManualConfirmation = "manual_confirmation"

	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeExecution holds the string denoting the execution edge name in mutations.
	EdgeExecution = "execution"

	// Table holds the table name of the execution in the database.
	Table = "executions"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "executions"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_user"
	// ExecutionTable is the table the holds the execution relation/edge.
	ExecutionTable = "actions"
	// ExecutionInverseTable is the table name for the Action entity.
	// It exists in this package in order to avoid circular dependency with the "action" package.
	ExecutionInverseTable = "actions"
	// ExecutionColumn is the table column denoting the execution relation/edge.
	ExecutionColumn = "execution_execution"
)

// Columns holds all SQL columns for execution fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldManualConfirmation,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Execution type.
var ForeignKeys = []string{
	"user_user",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/facebookincubator/symphony/pkg/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreateTime holds the default value on creation for the create_time field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the update_time field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	UpdateDefaultUpdateTime func() time.Time
)
