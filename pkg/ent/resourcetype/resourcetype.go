// Copyright (c) 2004-present Facebook All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by entc, DO NOT EDIT.

package resourcetype

import (
	"time"

	"github.com/facebook/ent"
)

const (
	// Label holds the string label denoting the resourcetype type in the database.
	Label = "resource_type"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeResourcetypeclass holds the string denoting the resourcetypeclass edge name in mutations.
	EdgeResourcetypeclass = "resourcetypeclass"
	// EdgeResourcetypebasetype holds the string denoting the resourcetypebasetype edge name in mutations.
	EdgeResourcetypebasetype = "resourcetypebasetype"
	// EdgeResourceRelationshipFkA holds the string denoting the resource_relationship_fk_a edge name in mutations.
	EdgeResourceRelationshipFkA = "resource_relationship_fk_a"
	// EdgeResourceRelationshipFkB holds the string denoting the resource_relationship_fk_b edge name in mutations.
	EdgeResourceRelationshipFkB = "resource_relationship_fk_b"

	// Table holds the table name of the resourcetype in the database.
	Table = "resource_types"
	// ResourcetypeclassTable is the table the holds the resourcetypeclass relation/edge.
	ResourcetypeclassTable = "resource_types"
	// ResourcetypeclassInverseTable is the table name for the ResourceTypeClass entity.
	// It exists in this package in order to avoid circular dependency with the "resourcetypeclass" package.
	ResourcetypeclassInverseTable = "resource_type_classes"
	// ResourcetypeclassColumn is the table column denoting the resourcetypeclass relation/edge.
	ResourcetypeclassColumn = "resource_type_class_resource_type_fk"
	// ResourcetypebasetypeTable is the table the holds the resourcetypebasetype relation/edge.
	ResourcetypebasetypeTable = "resource_types"
	// ResourcetypebasetypeInverseTable is the table name for the ResourceTypeBaseType entity.
	// It exists in this package in order to avoid circular dependency with the "resourcetypebasetype" package.
	ResourcetypebasetypeInverseTable = "resource_type_base_types"
	// ResourcetypebasetypeColumn is the table column denoting the resourcetypebasetype relation/edge.
	ResourcetypebasetypeColumn = "resource_type_base_type_resource_type_fk"
	// ResourceRelationshipFkATable is the table the holds the resource_relationship_fk_a relation/edge.
	ResourceRelationshipFkATable = "resource_relationships"
	// ResourceRelationshipFkAInverseTable is the table name for the ResourceRelationship entity.
	// It exists in this package in order to avoid circular dependency with the "resourcerelationship" package.
	ResourceRelationshipFkAInverseTable = "resource_relationships"
	// ResourceRelationshipFkAColumn is the table column denoting the resource_relationship_fk_a relation/edge.
	ResourceRelationshipFkAColumn = "resource_type_resource_relationship_fk_a"
	// ResourceRelationshipFkBTable is the table the holds the resource_relationship_fk_b relation/edge.
	ResourceRelationshipFkBTable = "resource_relationships"
	// ResourceRelationshipFkBInverseTable is the table name for the ResourceRelationship entity.
	// It exists in this package in order to avoid circular dependency with the "resourcerelationship" package.
	ResourceRelationshipFkBInverseTable = "resource_relationships"
	// ResourceRelationshipFkBColumn is the table column denoting the resource_relationship_fk_b relation/edge.
	ResourceRelationshipFkBColumn = "resource_type_resource_relationship_fk_b"
)

// Columns holds all SQL columns for resourcetype fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the ResourceType type.
var ForeignKeys = []string{
	"resource_type_base_type_resource_type_fk",
	"resource_type_class_resource_type_fk",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/facebookincubator/symphony/pkg/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreateTime holds the default value on creation for the create_time field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the update_time field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	UpdateDefaultUpdateTime func() time.Time
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
